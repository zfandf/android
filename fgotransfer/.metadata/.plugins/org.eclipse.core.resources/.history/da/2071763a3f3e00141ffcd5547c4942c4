package cn.m15.app.android.gotransfer.net.httpserver;

import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;
import android.database.Cursor;
import android.provider.MediaStore;
import cn.m15.app.android.gotransfer.net.httpserver.NanoHTTPD.Response;

public class PhotosServeAction extends ServeAction {

	private static final String[] CHILDREN_PROJECTION = {
			MediaStore.Images.Media._ID, 
			MediaStore.Images.Media.BUCKET_ID,
			MediaStore.Images.Media.DISPLAY_NAME, 
			MediaStore.Images.Media.DATA };

	private static final String[] GROUP_PROJECTION = new String[] {
			MediaStore.Images.Media.BUCKET_ID + " AS _id",
			MediaStore.Images.Media.BUCKET_DISPLAY_NAME,
			MediaStore.Images.Media.DATA };

	public static final int GROUP_BUCKET_ID = 0;
	public static final int GROUP_BUCKET_NAME = 1;
	public static final int GROUP_BUCKET_PATH = 2;

	public static final int CHILDREN_PIC_ID = 0;
	public static final int CHILDREN_BUCKET_ID = 1;
	public static final int CHILDREN_DISPLAY_NAME = 2;
	public static final int CHILDREN_PATH = 3;

	@Override
	protected Response response(Context mContext, Map<String, String> params,
			Map<String, String> files) throws JSONException {
		JSONObject result = new JSONObject();
		String bucketId = params.get("bucket_id");
		Log.i("<<photo>>", bucketId);
		JSONArray lists = (bucketId.equals("0")) ? getCategoryList(mContext)
				: getItemList(mContext, bucketId);
		result.put("photos", lists);
		result.put("code", 0);
		return createResponse(Response.Status.OK, NanoHTTPD.MIME_PLAINTEXT,
				result.toString());
	}

	private JSONArray getCategoryList(Context mContext) throws JSONException {
		JSONArray lists = new JSONArray();
		Cursor c = getCategoryCursor(mContext);
		if (c != null) {
			while (c.moveToNext()) {
				JSONObject item = new JSONObject();
				item.put("bucket_id", c.getString(GROUP_BUCKET_ID));
				item.put("name", c.getString(GROUP_BUCKET_NAME));
				lists.put(item);
			}
			c.close();
		}
		return lists;
	}

	private JSONArray getItemList(Context mContext, String bucketId)
			throws JSONException {
		JSONArray lists = new JSONArray();
		Cursor c = getItemCursor(mContext, bucketId);
		if (c != null) {
			while (c.moveToNext()) {
				JSONObject item = new JSONObject();
				item.put("pic_id", c.getString(CHILDREN_PIC_ID));
				item.put("bucket_id", c.getString(CHILDREN_BUCKET_ID));
				item.put("name", c.getString(CHILDREN_DISPLAY_NAME));
				item.put("path", c.getString(CHILDREN_PATH));
				lists.put(item);
			}
			c.close();
		}
		return lists;
	}

	private Cursor getItemCursor(Context mContext, String bucketId) {
		return MediaStore.Images.Media.query(mContext.getContentResolver(),
				MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
				CHILDREN_PROJECTION, MediaStore.Images.Media.SIZE + " > 0 and "
						+ MediaStore.Images.Media.BUCKET_ID + " = " + bucketId,
				MediaStore.Images.Media.DATE_MODIFIED + " DESC");
	}

	private Cursor getCategoryCursor(Context mContext) {
		return MediaStore.Images.Media.query(mContext.getContentResolver(),
				MediaStore.Images.Media.EXTERNAL_CONTENT_URI, GROUP_PROJECTION,
				"0==0) GROUP BY (" + MediaStore.Images.Media.BUCKET_ID, null,
				MediaStore.Images.Media.BUCKET_DISPLAY_NAME);

	}
}